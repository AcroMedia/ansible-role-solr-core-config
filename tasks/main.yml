---
- name: Read os-family-dependent vars
  include_vars: "vars/{{ ansible_os_family }}.yml"

- name: Check to see if solr_core_conf_source exists
  stat:
    path: "{{ solr_core_conf_source }}"
  register: result_src

- assert:
    that:
      - "result_src.stat.exists and result_src.stat.isdir"
    fail_msg: "Solr config source files doesnot exist. 'Conf folder' from the corresponding Drupal module
               can be copied to the project's home directory as the config source."


- name: Check to see if solr_core_conf_dest exists
  stat:
    path: "{{ solr_core_conf_dest }}"
  register: result_dest

- debug:
    var: solr_core_conf_dest
- debug:
    var: result_dest

- assert:
    that:
      - "result_dest.stat.exists and result_dest.stat.isdir"
    fail_msg: 'Solr config destination doesnot exist. The destination is usually the data folder inside the core.'

- name: Copy the solr schema into the core's conf directory
  synchronize:
    src: "{{ solr_core_conf_source }}/"
    dest: "{{ solr_core_conf_dest }}/"
    archive: true
    checksum: true
    compress: false
    delete: true
    dirs: true
    group: false
    mode: push
    owner: false
    perms: false
    recursive: true
    times: false
  delegate_to: "{{ inventory_hostname }}"
  when: result_src is defined
    and result_src.stat is defined
    and result_src.stat.exists
    and result_dest is defined
    and result_dest.stat is defined
    and result_dest.stat.exists
  notify: arscc restart solr
  register: sync_solr_conf

- name: Reset permissions on solr core config files
  command: >
    /bin/chown -Rv solr:solr "{{ solr_core_conf_dest }}"
  when: sync_solr_conf.changed

- name: Build the cron command string
  set_fact:
    solr_cron_command: >
      {{ arscc_path_to_service_binary }} {{ solr_service_name }} restart > /dev/null
  when: enable_solr_restart == true

- name: Create limitnofile
  template:
    src: templates/limitnofile.j2
    dest: /etc/security/limits.d/{{ solr_service_name }}.limitnofile.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - arscc restart solr

- name: Restart solr
  cron:
    user: "root"
    name: "Restart Solr Service"
    hour: '{{ solr_cron_hours }}'
    minute: "{{ solr_cron_minutes }}"
    job: "{{ solr_cron_command }}"
  when: solr_cron_command != ''
